#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# MediaWiki command-line Swiss Army Knife.  Run with --help to see more.
# https://github.com/OpenTechStrategies/csv2wiki/blob/master/mwiki-sak
#
# Copyright (C) 2017 Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

__doc__ = """\
TBD
"""

import mwclient
import getopt
import os
import sys
import configparser
import warnings
import requests  # for exception matching


def usage(errout=False):
    """Print a message explaining how to use this script.
    Print to stdout, unless ERROUT, in which case print to stderr."""
    out = sys.stderr if errout else sys.stdout
    out.write(__doc__)


def main():
    """TBD"""
    config = None

    try:
        opts, args = getopt.getopt(sys.argv[1:], 
                                   'h?c:',
                                   ["help",
                                    "usage",
                                    "config=",])
    except getopt.GetoptError as err:
        sys.stderr.write("ERROR: '%s'\n" % err)
        usage(errout=True)
        sys.exit(2)

    for o, a in opts:
        if o in ("-h", "-?", "--help", "--usage",):
            usage()
            sys.exit(0)
        elif o in ("-c", "--config",):
            config = configparser.ConfigParser()
            config.read(a)
        else:
            sys.stderr.write("ERROR: unrecognized option '%s'\n" % o)
            sys.exit(2)

    wiki_url    = config.get('default', 'wiki_url')
    username    = config.get('default', 'username')
    password    = config.get('default', 'password')
    path_to_api = config.get('default', 'path_to_api', fallback="/")

    # Connect to the site.
    try:
        site_conn = mwclient.Site(wiki_url.split("://"), path=path_to_api)
    except requests.exceptions.HTTPError as err: 
        sys.stderr.write("ERROR: failed to connect to wiki URL '%s'\n" % wiki_url)
        sys.stderr.write("       Error details:\n")
        sys.stderr.write("       ('%s')\n" % err)
        sys.exit(1)
    try:
        site_conn.login(username, password)
    except mwclient.errors.LoginError as err:
        sys.stderr.write("ERROR: Unable to log in to wiki; "
                         "check that username and password are correct.\n")
        sys.stderr.write("       Error details:\n")
        sys.stderr.write("       ('%s')\n" % err)
        sys.exit(1)

    # Would like a command-line equivalent of this...
    #
    # https://macfound.opentechstrategies.com/mwiki/api.php?action=query&list=allpages
    #
    # ...except to get all pages, and then to be able to pare out a
    # subset and delete them.

    # But for now, let's get file uploads working.  
    #
    # What I'd like is for mwiki-sak to have an "upload" subcommand,
    # where you pass it a file and a page title as arguments (and the
    # usual wiki login info via -c CONFIG_FILE), and it uploads the
    # file to the wiki and makes a link from the page, creating a new
    # "attachments" section on the page or something like that.
    # 
    # The code below just tries to get one upload working via API.
    # Currently it fails (on a .docx file) with this error:
    #
    # mwclient.errors.APIError: 
    #   ('filetype-banned',
    #    'Filetype not permitted: docx', 
    #    'See http://localhost/mwiki/api.php for API usage')
    #
    # Solutions can probably be found on:
    #
    #   https://www.mediawiki.org/wiki/Help:Managing_files
    #   https://www.mediawiki.org/wiki/Manual:$wgFileExtensions
    #   https://www.mediawiki.org/wiki/Manual:Configuring_file_uploads
    #   https://www.mediawiki.org/wiki/Manual_talk:Configuring_file_uploads

    file_path = "Fill this in with the path to some file to upload"
    page_name = "Fill this in with a wiki page name"
    # page = site_conn.pages[page_name]
    try:
        site_conn.upload(open(file_path, 'rb'), 
                         filename=os.path.basename(file_path),
                         description='Team description for %s' % page_name)
    except mwclient.errors.APIError as e:
        raise Exception("ERROR: unable to upload file '%s': '%s'" % (file_path, e.info))


if __name__ == '__main__':
    main()
