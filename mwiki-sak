#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# MediaWiki command-line Swiss Army Knife.  Run with --help to see more.
# https://github.com/OpenTechStrategies/csv2wiki/blob/master/mwiki-sak
#
# Copyright (C) 2017 Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

__doc__ = """\
TBD
"""

import mwclient
import getopt, sys
import configparser
import warnings
import requests  # for exception matching


def usage(errout=False):
    """Print a message explaining how to use this script.
    Print to stdout, unless ERROUT, in which case print to stderr."""
    out = sys.stderr if errout else sys.stdout
    out.write(__doc__)


def main():
    """TBD"""
    config = None

    try:
        opts, args = getopt.getopt(sys.argv[1:], 
                                   'h?c:',
                                   ["help",
                                    "usage",
                                    "config=",])
    except getopt.GetoptError as err:
        sys.stderr.write("ERROR: '%s'\n" % err)
        usage(errout=True)
        sys.exit(2)

    for o, a in opts:
        if o in ("-h", "-?", "--help", "--usage",):
            usage()
            sys.exit(0)
        elif o in ("-c", "--config",):
            config = configparser.ConfigParser()
            config.read(a)
        else:
            sys.stderr.write("ERROR: unrecognized option '%s'\n" % o)
            sys.exit(2)

    wiki_url    = config.options('default')['wiki_url']
    username    = config.options('default')['username']
    password    = config.options('default')['password']
    path_to_api = config.options('default')['path_to_api']

    # Connect to the site.
    try:
        site_conn = mwclient.Site(wiki_url.split("://"), path=path_to_api)
    except requests.exceptions.HTTPError as err: 
        sys.stderr.write("ERROR: failed to connect to wiki URL '%s'\n" % wiki_url)
        sys.stderr.write("       Error details:\n")
        sys.stderr.write("       ('%s')\n" % err)
        sys.exit(1)
    try:
        site_conn.login(username, password)
    except mwclient.errors.LoginError as err:
        sys.stderr.write("ERROR: Unable to log in to wiki; "
                         "check that username and password are correct.\n")
        sys.stderr.write("       Error details:\n")
        sys.stderr.write("       ('%s')\n" % err)
        sys.exit(1)

    fooo working here


if __name__ == '__main__':
    main()
